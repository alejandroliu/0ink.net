#!/bin/sh
#
# Install as /etc/X11/xinit/session
#
# Loosely based on: [LighDM Session script](https://github.com/canonical/lightdm/blob/master/debian/lightdm-session)
# and xdm's Xsession scripts.
#
if [ -z "$(pidof xconsole)" ] ; then
  # We only do this if xconsole doesn't exist
  if [ -f $HOME/.xsession-errors ] ; then
    rm -f $HOME/.xsession-errors.old
    mv -v $HOME/.xsession-errors $HOME/.xsession-errors.old
  fi
  exec > $HOME/.xsession-errors 2>&1 </dev/null
fi

# Load profile
for file in "/etc/profile" "$HOME/.profile" "/etc/xprofile" "$HOME/.xprofile"; do
  [ -f "$file" ] && . "$file"
done

# Load resources
if type xrdb >/dev/null 2>&1; then
  xresourcedir="/etc/X11/Xresources"
  if [ -d "$xresourcedir" ]; then
    for file in $xresourcedir/*; do
      echo "Loading resource: $file"
      xrdb -merge "$file"
    done
  fi
  xresourcefile="$HOME/.Xresources"
  if [ -f "$xresourcefile" ]; then
    echo "Loading resource: $xresourcefile"
    xrdb -merge "$xresourcefile"
  fi
fi

# Load keymaps
if type setxkbmap >/dev/null 2>&1; then
  for file in "/etc/X11/Xkbmap" "$HOME/.Xkbmap"; do
    if [ -f "$file" ]; then
      echo "Loading keymap: $file"
      setxkbmap `cat "$file"`
      XKB_IN_USE=yes
    fi
  done
fi

# Load xmodmap if not using XKB
if type xmodmap >/dev/null 2>&1; then
  if [ -z "$XKB_IN_USE" ]; then
    for file in "/etc/X11/Xmodmap" "$HOME/.Xmodmap"; do
      if [ -f "$file" ]; then
       echo "Loading modmap: $file"
       xmodmap "$file"
      fi
    done
  fi
fi

unset XKB_IN_USE

# Run all system xinitrc shell scripts.
xinitdir="/etc/X11/xinit/xinitrc.d"
if [ -d "$xinitdir" ]; then
  for script in $xinitdir/*; do
    echo "Loading xinit script $script"
    if [ -x "$script" -a ! -d "$script" ]; then
      . "$script"
    fi
  done
fi

#
# We need this so MATE and/or XFCE4 desktops can start succesfully!
#
xhost +local:

#
# Try the user's .xsession if it exists...
if [ -f $HOME/.xsession ] ; then
  . $HOME/.xsession
fi
#
# If it did not exec'ed it will trt checking $HOME/.xdesktop
# for a preferred desktop.
#
cklaunch=false
sshagent=false

if [ -f $HOME/.xdesktop ] ; then
  # Customer selected desktop
  desktop=$(cat $HOME/.xdesktop)
else
  if type mate-session >/dev/null 2>&1 ; then
    desktop="mate-session"
    cklaunch=true
  elif type startxfce4 >/dev/null 2>&1 ; then
    desktop="startxfce4"
  elif type startlxqt >/dev/null 2>&1 ; then
    sshagent=true
    desktop="startlxqt"
  elif type startplasma-x11 >/dev/null 2>&1 ; then
    desktop="startplasma-x11"
  elif type gnome-session >/dev/null 2>&1 ; then
    export XDG_CURRENT_DESKTOP=GNOME-Flashback:GNOME
    desktop="gnome-session --session=gnome-flashback-metacity"
  elif type cinnamon-session >/dev/null 2>&1 ; then
    desktop="cinnamon-session"
  elif type budgie-desktop >/dev/null 2>&1 ; then
    desktop="budgie-desktop"
    cklaunch=true
  elif type xsm >/dev/null 2>&1 ; then
    desktop=xsm
  else
    desktop=xterm
  fi
fi

ckcmd=""
if $cklaunch ; then
  if type ck-launch-session >/dev/null 2>&1 ; then
    ckcmd=ck-launch-session
  fi
fi
agentcmd=""
if $sshagent ; then
  if type ssh-agent >/dev/null 2>&1 ; then
    agentcmd=ssh-agent
  fi
fi

echo "$$ $(id -un) $desktop" > /run/xsession.pid

exec $ckcmd $agentcmd $desktop
