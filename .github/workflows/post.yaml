name: automatic doc genration

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main","master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between
# the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these
# production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  run-pelican:
    runs-on: ubuntu-20.04
    name: pelican to gh-pages
    steps:
      - uses: actions/checkout@v3
      - name: Setup Pages
        # I am not sure what is this step for... Maybe for the upload-pages to work?
        uses: actions/configure-pages@v3
      - name: create python venv
        run: |
          echo WIP
      - name: Generating sphinx documentation
        run: |
          #~ cd docs && ./mk html && cp -av _build/html ../_site
          echo WIP
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  #~ deploy:
    #~ environment:
      #~ name: github-pages
      #~ url: ${{ steps.deployment.outputs.page_url }}
    #~ runs-on: ubuntu-latest
    #~ needs: sphinx_docs_to_gh-pages
    #~ steps:
      #~ - name: Deploy to GitHub Pages
        #~ id: deployment
        #~ uses: actions/deploy-pages@v2







